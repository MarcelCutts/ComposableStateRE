// Generated by BUCKLESCRIPT VERSION 4.0.2, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Recompose = require("recompose");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function CreateWithState(Params) {
  var component = ReasonReact.statelessComponent("WithState");
  var make$prime = function (setState, state, children) {
    return /* record */[
            /* debugName */component[/* debugName */0],
            /* reactClassInternal */component[/* reactClassInternal */1],
            /* handedOffState */component[/* handedOffState */2],
            /* willReceiveProps */component[/* willReceiveProps */3],
            /* didMount */component[/* didMount */4],
            /* didUpdate */component[/* didUpdate */5],
            /* willUnmount */component[/* willUnmount */6],
            /* willUpdate */component[/* willUpdate */7],
            /* shouldUpdate */component[/* shouldUpdate */8],
            /* render */(function () {
                return Curry._2(children, setState, state);
              }),
            /* initialState */component[/* initialState */10],
            /* retainedProps */component[/* retainedProps */11],
            /* reducer */component[/* reducer */12],
            /* subscriptions */component[/* subscriptions */13],
            /* jsElementWrapped */component[/* jsElementWrapped */14]
          ];
  };
  var jsComponent = ReasonReact.wrapReasonForJs(component, (function (props) {
          return make$prime(props.setState, props.state, props.children);
        }));
  var enhanced = Curry._1(Recompose.withState("state", "setState", Params[/* defaultValue */0]), jsComponent);
  var make = function (children) {
    return ReasonReact.wrapJsForReason(enhanced, { }, children);
  };
  return /* module */[
          /* component */component,
          /* make' */make$prime,
          /* jsComponent */jsComponent,
          /* enhanced */enhanced,
          /* make */make
        ];
}

var component = ReasonReact.statelessComponent("WithState");

function make$prime(setState, state, children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return Curry._2(children, setState, state);
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var jsComponent = ReasonReact.wrapReasonForJs(component, (function (props) {
        return make$prime(props.setState, props.state, props.children);
      }));

var enhanced = Curry._1(Recompose.withState("state", "setState", 0), jsComponent);

function make(children) {
  return ReasonReact.wrapJsForReason(enhanced, { }, children);
}

var WithCountState = /* module */[
  /* component */component,
  /* make' */make$prime,
  /* jsComponent */jsComponent,
  /* enhanced */enhanced,
  /* make */make
];

var component$1 = ReasonReact.statelessComponent("WithStateRecompose");

function make$1() {
  return /* record */[
          /* debugName */component$1[/* debugName */0],
          /* reactClassInternal */component$1[/* reactClassInternal */1],
          /* handedOffState */component$1[/* handedOffState */2],
          /* willReceiveProps */component$1[/* willReceiveProps */3],
          /* didMount */component$1[/* didMount */4],
          /* didUpdate */component$1[/* didUpdate */5],
          /* willUnmount */component$1[/* willUnmount */6],
          /* willUpdate */component$1[/* willUpdate */7],
          /* shouldUpdate */component$1[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(undefined, undefined, make((function (setState, count) {
                                return React.createElement("div", undefined, "Count: " + String(count), React.createElement("button", {
                                                onClick: (function () {
                                                    return setState(count + 2 | 0);
                                                  })
                                              }, "Inc"), React.createElement("button", {
                                                onClick: (function () {
                                                    return setState(count - 3 | 0);
                                                  })
                                              }, "Dec"));
                              })));
            }),
          /* initialState */component$1[/* initialState */10],
          /* retainedProps */component$1[/* retainedProps */11],
          /* reducer */component$1[/* reducer */12],
          /* subscriptions */component$1[/* subscriptions */13],
          /* jsElementWrapped */component$1[/* jsElementWrapped */14]
        ];
}

exports.CreateWithState = CreateWithState;
exports.WithCountState = WithCountState;
exports.component = component$1;
exports.make = make$1;
/* component Not a pure module */
